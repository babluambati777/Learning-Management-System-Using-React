{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bablu\\\\OneDrive\\\\Desktop\\\\Gradious\\\\LMS\\\\Frontend\\\\src\\\\components\\\\Marks\\\\MarkForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { markAPI } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkForm = ({\n  mark,\n  students,\n  batches,\n  onSuccess,\n  onCancel\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    student: '',\n    batch: '',\n    subject: '',\n    marksObtained: '',\n    totalMarks: '',\n    examType: 'Assignment',\n    examDate: '',\n    remarks: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [filteredStudents, setFilteredStudents] = useState([]);\n  useEffect(() => {\n    if (mark) {\n      setFormData({\n        student: mark.student._id || mark.student,\n        batch: mark.batch._id || mark.batch,\n        subject: mark.subject,\n        marksObtained: mark.marksObtained,\n        totalMarks: mark.totalMarks,\n        examType: mark.examType,\n        examDate: mark.examDate.split('T')[0],\n        remarks: mark.remarks || ''\n      });\n    }\n  }, [mark]);\n  useEffect(() => {\n    if (formData.batch) {\n      const studentsInBatch = students.filter(s => s.batch._id === formData.batch);\n      setFilteredStudents(studentsInBatch);\n    } else {\n      setFilteredStudents(students);\n    }\n  }, [formData.batch, students]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // If batch changes, reset student selection\n    if (name === 'batch') {\n      setFormData({\n        ...formData,\n        [name]: value,\n        student: ''\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    var _formData$marksObtain, _formData$totalMarks;\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    const obtainedRaw = (_formData$marksObtain = formData.marksObtained) === null || _formData$marksObtain === void 0 ? void 0 : _formData$marksObtain.toString().trim();\n    const totalRaw = (_formData$totalMarks = formData.totalMarks) === null || _formData$totalMarks === void 0 ? void 0 : _formData$totalMarks.toString().trim();\n    const obtained = Number(obtainedRaw);\n    const total = Number(totalRaw);\n\n    // Skip validation if either value is missing or invalid\n    if (!obtainedRaw || !totalRaw || isNaN(obtained) || isNaN(total)) {\n      setError('');\n      return;\n    }\n\n    // Logical validation\n    if (obtained > total) {\n      setError('Marks obtained cannot be greater than total marks');\n      setLoading(false);\n      return;\n    }\n\n    // Clear error if validation passes\n    setError('');\n    try {\n      if (mark) {\n        await markAPI.update(mark._id, formData);\n      } else {\n        await markAPI.create(formData);\n      }\n      onSuccess();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to save mark entry');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const percentage = formData.marksObtained && formData.totalMarks ? (parseFloat(formData.marksObtained) / parseFloat(formData.totalMarks) * 100).toFixed(2) : 0;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"batch\",\n          children: \"Batch *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"batch\",\n          name: \"batch\",\n          value: formData.batch,\n          onChange: handleChange,\n          required: true,\n          disabled: !!mark,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Batch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), batches.map(batch => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: batch._id,\n            children: [batch.batchName, \" (\", batch.batchCode, \")\"]\n          }, batch._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"student\",\n          children: \"Student *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"student\",\n          name: \"student\",\n          value: formData.student,\n          onChange: handleChange,\n          required: true,\n          disabled: !!mark || !formData.batch,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), filteredStudents.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: student._id,\n            children: [student.firstName, \" \", student.lastName, \" (\", student.enrollmentNumber, \")\"]\n          }, student._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), !formData.batch && /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: '#6b7280'\n          },\n          children: \"Please select a batch first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"subject\",\n          children: \"Subject *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"subject\",\n          name: \"subject\",\n          value: formData.subject,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"examType\",\n          children: \"Exam Type *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"examType\",\n          name: \"examType\",\n          value: formData.examType,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Quiz\",\n            children: \"Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Assignment\",\n            children: \"Assignment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Midterm\",\n            children: \"Midterm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Final\",\n            children: \"Final\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Project\",\n            children: \"Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"marksObtained\",\n          children: \"Marks Obtained *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"marksObtained\",\n          name: \"marksObtained\",\n          value: formData.marksObtained,\n          onChange: handleChange,\n          min: \"0\",\n          step: \"0.01\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"totalMarks\",\n          children: \"Total Marks *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"totalMarks\",\n          name: \"totalMarks\",\n          value: formData.totalMarks,\n          onChange: handleChange,\n          min: \"1\",\n          step: \"0.01\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), formData.marksObtained && formData.totalMarks && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      style: {\n        marginBottom: '15px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Calculated Percentage: \", percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"examDate\",\n        children: \"Exam Date *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"examDate\",\n        name: \"examDate\",\n        value: formData.examDate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"remarks\",\n        children: \"Remarks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"remarks\",\n        name: \"remarks\",\n        value: formData.remarks,\n        onChange: handleChange,\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading,\n        style: {\n          flex: 1\n        },\n        children: loading ? 'Saving...' : mark ? 'Update Mark Entry' : 'Create Mark Entry'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: onCancel,\n        style: {\n          flex: 1\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(MarkForm, \"N7fhXhbYK7mEE7H4LUB80JLEr7k=\");\n_c = MarkForm;\nexport default MarkForm;\nvar _c;\n$RefreshReg$(_c, \"MarkForm\");","map":{"version":3,"names":["React","useState","useEffect","markAPI","jsxDEV","_jsxDEV","MarkForm","mark","students","batches","onSuccess","onCancel","_s","formData","setFormData","student","batch","subject","marksObtained","totalMarks","examType","examDate","remarks","loading","setLoading","error","setError","filteredStudents","setFilteredStudents","_id","split","studentsInBatch","filter","s","handleChange","e","name","value","target","handleSubmit","_formData$marksObtain","_formData$totalMarks","preventDefault","obtainedRaw","toString","trim","totalRaw","obtained","Number","total","isNaN","update","create","err","_err$response","_err$response$data","response","data","message","percentage","parseFloat","toFixed","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","required","disabled","map","batchName","batchCode","firstName","lastName","enrollmentNumber","style","color","type","min","step","marginBottom","rows","display","gap","marginTop","flex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bablu/OneDrive/Desktop/Gradious/LMS/Frontend/src/components/Marks/MarkForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { markAPI } from '../../services/api';\r\n\r\nconst MarkForm = ({ mark, students, batches, onSuccess, onCancel }) => {\r\n  const [formData, setFormData] = useState({\r\n    student: '',\r\n    batch: '',\r\n    subject: '',\r\n    marksObtained: '',\r\n    totalMarks: '',\r\n    examType: 'Assignment',\r\n    examDate: '',\r\n    remarks: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [filteredStudents, setFilteredStudents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (mark) {\r\n      setFormData({\r\n        student: mark.student._id || mark.student,\r\n        batch: mark.batch._id || mark.batch,\r\n        subject: mark.subject,\r\n        marksObtained: mark.marksObtained,\r\n        totalMarks: mark.totalMarks,\r\n        examType: mark.examType,\r\n        examDate: mark.examDate.split('T')[0],\r\n        remarks: mark.remarks || '',\r\n      });\r\n    }\r\n  }, [mark]);\r\n\r\n  useEffect(() => {\r\n    if (formData.batch) {\r\n      const studentsInBatch = students.filter(s => s.batch._id === formData.batch);\r\n      setFilteredStudents(studentsInBatch);\r\n    } else {\r\n      setFilteredStudents(students);\r\n    }\r\n  }, [formData.batch, students]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // If batch changes, reset student selection\r\n    if (name === 'batch') {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n        student: '',\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\nconst obtainedRaw = formData.marksObtained?.toString().trim();\r\nconst totalRaw = formData.totalMarks?.toString().trim();\r\n\r\nconst obtained = Number(obtainedRaw);\r\nconst total = Number(totalRaw);\r\n\r\n// Skip validation if either value is missing or invalid\r\nif (!obtainedRaw || !totalRaw || isNaN(obtained) || isNaN(total)) {\r\n  setError('');\r\n  return;\r\n}\r\n\r\n// Logical validation\r\nif (obtained > total) {\r\n  setError('Marks obtained cannot be greater than total marks');\r\n  setLoading(false);\r\n  return;\r\n}\r\n\r\n// Clear error if validation passes\r\nsetError('');\r\n\r\n\r\n\r\n    try {\r\n      if (mark) {\r\n        await markAPI.update(mark._id, formData);\r\n      } else {\r\n        await markAPI.create(formData);\r\n      }\r\n      onSuccess();\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to save mark entry');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const percentage = formData.marksObtained && formData.totalMarks\r\n    ? ((parseFloat(formData.marksObtained) / parseFloat(formData.totalMarks)) * 100).toFixed(2)\r\n    : 0;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {error && <div className=\"alert alert-error\">{error}</div>}\r\n\r\n      <div className=\"grid grid-2\">\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"batch\">Batch *</label>\r\n          <select\r\n            id=\"batch\"\r\n            name=\"batch\"\r\n            value={formData.batch}\r\n            onChange={handleChange}\r\n            required\r\n            disabled={!!mark}\r\n          >\r\n            <option value=\"\">Select Batch</option>\r\n            {batches.map((batch) => (\r\n              <option key={batch._id} value={batch._id}>\r\n                {batch.batchName} ({batch.batchCode})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"student\">Student *</label>\r\n          <select\r\n            id=\"student\"\r\n            name=\"student\"\r\n            value={formData.student}\r\n            onChange={handleChange}\r\n            required\r\n            disabled={!!mark || !formData.batch}\r\n          >\r\n            <option value=\"\">Select Student</option>\r\n            {filteredStudents.map((student) => (\r\n              <option key={student._id} value={student._id}>\r\n                {student.firstName} {student.lastName} ({student.enrollmentNumber})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {!formData.batch && (\r\n            <small style={{ color: '#6b7280' }}>Please select a batch first</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-2\">\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"subject\">Subject *</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={formData.subject}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"examType\">Exam Type *</label>\r\n          <select\r\n            id=\"examType\"\r\n            name=\"examType\"\r\n            value={formData.examType}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"Quiz\">Quiz</option>\r\n            <option value=\"Assignment\">Assignment</option>\r\n            <option value=\"Midterm\">Midterm</option>\r\n            <option value=\"Final\">Final</option>\r\n            <option value=\"Project\">Project</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-2\">\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"marksObtained\">Marks Obtained *</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"marksObtained\"\r\n            name=\"marksObtained\"\r\n            value={formData.marksObtained}\r\n            onChange={handleChange}\r\n            min=\"0\"\r\n            step=\"0.01\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"totalMarks\">Total Marks *</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"totalMarks\"\r\n            name=\"totalMarks\"\r\n            value={formData.totalMarks}\r\n            onChange={handleChange}\r\n            min=\"1\"\r\n            step=\"0.01\"\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {formData.marksObtained && formData.totalMarks && (\r\n        <div className=\"alert alert-info\" style={{ marginBottom: '15px' }}>\r\n          <strong>Calculated Percentage: {percentage}%</strong>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"examDate\">Exam Date *</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"examDate\"\r\n          name=\"examDate\"\r\n          value={formData.examDate}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"remarks\">Remarks</label>\r\n        <textarea\r\n          id=\"remarks\"\r\n          name=\"remarks\"\r\n          value={formData.remarks}\r\n          onChange={handleChange}\r\n          rows=\"3\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', gap: '10px', marginTop: '20px' }}>\r\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={loading} style={{ flex: 1 }}>\r\n          {loading ? 'Saving...' : mark ? 'Update Mark Entry' : 'Create Mark Entry'}\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={onCancel} style={{ flex: 1 }}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MarkForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}